# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Service.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just run `graphcool deploy` to have the first running Graphcool Service.
#
# Check out some examples:
#    https://github.com/graphcool/framework/tree/master/examples
#
# Here are the reference docs of this definition format:
# https://www.graph.cool/docs/reference/service-definition/graphcool.yml-foatho8aip
#
# Happy Coding!


# In the types.graphql you define your data schema
types: ./types.graphql


functions:

# added by email-password template: (please uncomment)
# 
  signup:
    type: resolver
    schema: src/email-password/signup.graphql
    handler:
      code: src/email-password/signup.ts

  authenticate:
    type: resolver
    schema: src/email-password/authenticate.graphql
    handler:
      code: src/email-password/authenticate.ts

  loggedInUser:
    type: resolver
    schema: src/email-password/loggedInUser.graphql
    handler:
      code: src/email-password/loggedInUser.ts

      #  hello:
      #    handler:
      #      code: src/hello.js
      #    type: resolver
      #    schema: src/hello.graphql
      #

# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://www.graph.cool/docs/reference/auth/authorization/overview-iegoo0heez
permissions:

  ## User READ ##
  # Admin
  - operation: User.read
    authenticated: true  
    query: ./permissions/IsAdmin.graphql
  # Owner
  - operation: User.read
    authenticated: true
    query: ./permissions/UserOwner.graphql
  # Default users
  - operation: User.read
    authenticated: true
    fields: [dateOfBirth, email, id]

  ## User Update ##
  # Admin
  - operation: User.update
    authenticated: true
    query: ./permissions/IsAdmin.graphql
  # Owner
  - operation: User.update
    authenticated: true
    fields: [dateOfBirth]
    query: ./permissions/UserOwner.graphql

  ## Post Read ##
  # All auth
  - operation: Post.read
    authenticated: true

  ## Post Create ##
  # All auth
  - operation: Post.create
    authenticated: true
  
  ## Post Update ##
  # Admin
  - operation: Post.update
    authenticated: true
    query: ./permissions/IsAdmin.graphql
  # Owner 
  - operation: Post.update
    authenticated: true
    fields: [title, body]
    query: ./permissions/PostOwner.graphql
  
  ## Post Delete ##
  # Admin
  - operation: Post.delete
    authenticated: true
    query: ./permissions/IsAdmin.graphql
  # Owner
  - operation: Post.delete
    authenticated: true
    query: ./permissions/PostOwner.graphql


# Your root tokens used for functions to get full access to the API
# Read more here:
# https://www.graph.cool/docs/reference/auth/authentication/authentication-tokens-eip7ahqu5o
# rootTokens:
#   - mytoken
